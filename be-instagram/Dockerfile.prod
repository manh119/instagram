# Multi-stage build for Spring Boot application
FROM gradle:8.5-jdk17-alpine AS builder

WORKDIR /app

# Copy Gradle wrapper and build scripts first
COPY gradlew gradlew.bat build.gradle settings.gradle ./
COPY gradle gradle
COPY gradle/wrapper gradle/wrapper

# Make gradlew executable
RUN chmod +x gradlew

# Create gradle cache dir
RUN mkdir -p /home/gradle/.gradle

# Download dependencies (this will be cached if build.gradle/settings.gradle don't change)
RUN ./gradlew dependencies --no-daemon --build-cache

# Copy source code
COPY src src

# Build application (reuses cached dependencies)
RUN ./gradlew build -x test --no-daemon --build-cache

# -----------------------
# Runtime image
FROM eclipse-temurin:17-jre-alpine AS runtime

RUN apk add --no-cache wget tzdata \
    && rm -rf /var/cache/apk/*

RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

WORKDIR /app

COPY --from=builder /app/build/libs/ /app/

RUN mkdir -p /app/logs /app/data && \
    chown -R appuser:appgroup /app

USER appuser

EXPOSE 8080

ENV JAVA_OPTS="-Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/./urandom"

HEALTHCHECK --interval=30s --timeout=3s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/actuator/health || exit 1

CMD ["sh", "-c", "java $JAVA_OPTS -jar *.jar"]
